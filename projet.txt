.. _IntroductionRecherche:

Introduction Ã  la recherche
===========================

Dans cette derniere partie du cours vous allez devoir lire, comprendre, synthetiser et experimenter sur un article de recherche associe Ã  un code source. Le but est de decouvrir une nouvelle methode de traitement d'image presentee sous la forme d'un article de recherche, de s'approprier le code source publie par les auteurs et de reproduire une partie des experiences presentees dans l'article.

.. important::

	Vous travaillerez en monome ou par groupe de 2. Vous devrez rendre, sur votre depot git  au plus tard Ã  la date indiquee par mail :
	
	1) Un rapport (format pdf),
	2) Le code source vous ayant permis de realiser les experiences presentees dans votre rapport.
	
	**Plagiat** : La recuperation de tout ou portion du travail d'une tierce personne, qu'il s'agisse d'un etudiant ou autre, provenant d'un site internet, d'une video ou tout autre support, n'est permise qu'avec la permission de l'auteur, ce dernier devant etre cite dans le code et dans le rapport. Un travail utilise sans reference Ã  son auteur constitue un plagiat. Le plagiat est interdit par le reglement interieur de l'ecole (Article 3). En cas de plagiat, le conseil de discipline peut prononcer des sanctions allant jusqu'Ã  l'exclusion definitive de l'etudiant.


Organisation du rapport
***********************	
	
Le rapport comportera 3 parties :

1) Synthese de l'article
2) Etude de l'implementation
3) Experimentations

Synthese de l'article
---------------------

Cette partie est un resume critique de l'article (longueur : environ 6000 caracteres). Vous donnerez en particulier les elements suivants :

- le contexte : quelle est la problematique generale abordee ?
- les objectifs : quel est le but de la methode proposee dans l'article ?
- les hypotheses : pourquoi l'approche proposee est-elle pertinente pour atteindre les objectifs ? 
- la methode : comment fonctionne la methode proposee ?
- methodologie de validation : quels sont les tests proposes par les auteurs pour valider leurs hypotheses ?  pour valider la methode ?
- les resultats : quels sont les resultats des tests ?
- opinion personnelle : quel est votre impression personnel sur cet article ? (interet, qualite d'ecriture, des hypotheses, de la methode, des tests...)

Etude de l'implementation
-------------------------

Cette partie a pour but d'etudier l'implementation fournie par les auteurs ou un tiers (longueur : environ 3000 caracteres). Vous donnerez en particulier les elements suivants :

- la portee des programmes fournis : le code fourni permet-il de reproduire la totalite des experiences presentees dans l'article ?
- la structure : quelles sont les interfaces fournies ? le code est-il bien structure ? pensez-vous pouvoir le reutiliser dans une autre contexte ?
- la fidelite : le code fourni correspond-il Ã  ce qui est decrit dans l'article ? Si non, quelles sont les differences notables ?

Experimentations
----------------

Cette partie a pour but de verifier que tout oÃ¹ partie des experiences realisees dans l'article sont reproductibles (longueur : environ 3000 caracteres). Vous donnerez en particulier les elements suivants :

- experiences reproduites : decrivez les experiences que vous avez choisies de reproduire.
- configuration de tests : precisez les conditions d'experimentation (choix des images, des parametres).
- analyse des resultats : analysez les resultats obtenus, sont-ils conformes aux resultats presentes dans l'article ?
- experiences complementaires : pouvez-vous proposer des experiences complementaires pour evaluer la methode ?


Code rendu
**********

Votre depot devra contenir (en plus du rapport) tout le code utilise pour preparer la partie *Experimentations* du rapport. On devra en particulier trouver :

- un fichier *ReadMe* detaillant 

	- le contenu du depot
	- expliquant comment utiliser les scripts et executables	
	- expliquant la procedure de *build* (si applicable)
	
- des scripts et/ou executables pour generer les resultats et figures montres dans la partie *Experimentations* du rapport,
- tous les codes sources utilises avec reference Ã  leurs auteurs.

Articles proposes
*****************

Vous trouverez ci-dessous la liste des articles proposes. Vous pouvez proposer d'autres articles, sous reserve de validation.


.. note::

	Certains articles sont plus courts que d'autres. Au vu des delais donnes, il n'est pas demande d'atteindre une comprehension integrale des articles les plus longs. Le corrolaire etant que lacomprehension attendue des articles les plus courts est plus poussee que celle des articles les plus longs (le temps de travail attendu est equivalent).

- SLIC superpixels, decoupage regulie et adaptatif de l'image : :download:`article <SLIC_Superpixels.pdf>` `code <https://www.epfl.ch/labs/ivrl/research/slic-superpixels/>`__.
- SEAM carving, redimensionnement intelligent d'images : :download:`article <Seam_Carving.pdf>` `code <https://github.com/KirillLykov/cvision-algorithms/blob/master/src/seamCarving.m>`__ (parmi beaucoup d'autres).
- Non-local means, filtre de debruitage tres performant : :download:`article <NL_Means.pdf>` `code <http://www.ipol.im/pub/art/2011/bcm_nlm/>`__.
- Guided filters, bilateral filters nouvel generation : :download:`article <Guided_filters.pdf>` `code <https://github.com/clarkzjw/GuidedFilter/blob/master/MATLAB/guidedfilter_color.m>`__.
- Image foresting transform, algorithme de segmentation d'images base sur l'algorithme de Dijkstra: :download:`article <Image_foresting_Transform.pdf>` `code <https://github.com/afalcao/ift-demo>`__.
- Efficient Graph-Based Image Segmentation, algorithme de segmentation d'images : :download:`article <Graph_based_seg.pdf>` `code <https://cs.brown.edu/~pff/segment/index.html>`__.
- Extreme image completion, reconstitution d'images Ã  partir d'un tres faible nombre de pixels : :download:`article <Extreme_image_completion.pdf>` `code <https://www.epfl.ch/labs/ivrl/research/image-completion/>`__.
- Interractive segmentation, selection interractive d'objets dans une image : :download:`article <Interractive_Seg_CC.pdf>` `code <http://www.ipol.im/pub/art/2014/71/>`__. 
- Detection de structure lineaire 3D, detection des vaisseaux sanguins en imagerie medicale : :download:`article <RORPO.pdf>` `code <http://www.ipol.im/pub/art/2017/207/>`__. 
- LSD, detection de segments avec une approche *a contrario* : `code et article <http://www.ipol.im/pub/art/2012/gjmr-lsd/>`__.  
- MTO, detection d'objets Ã  tres faible brillance de surface en imagerie astronomique : `article <https://pure.rug.nl/ws/portalfiles/portal/49774208/Statistical_attribute_filtering_to_detect_faint.pdf>`__ `code <https://github.com/CarolineHaigh/mtobjects>`__.
- Waterpixels, decoupage regulie et adaptatif de l'image : `article <https://hal.archives-ouvertes.fr/hal-01212760/document>`__ `code <https://www.ipol.im/pub/art/2019/250/>`__. 
- PatchMatch, edition d'image structurelle : `code et article <https://gfx.cs.princeton.edu/pubs/Barnes_2009_PAR/>`__ `code (autre) <https://www.ipol.im/pub/art/2017/189/>`__. 
- Exposure Fusion, high dynamic range image : `article <http://ntp-0.cs.ucl.ac.uk/staff/j.kautz/publications/exposure_fusion.pdf>`__ et `code <https://www.ipol.im/pub/art/2018/230/>`__. 

